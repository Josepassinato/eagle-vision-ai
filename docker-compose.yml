version: "3.9"

services:
  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
    restart: unless-stopped
    network_mode: "host"   # simplifica WebRTC/SRT (UDP)
    volumes:
      - ./mediamtx.yml:/mediamtx.yml:ro
      - ./recordings:/recordings
    environment:
      - MTX_LOGLEVEL=info

  yolo-detection:
    build: ./yolo-detection
    container_name: yolo-detection
    restart: unless-stopped
    ports:
      - "18060:18060"
    environment:
      - YOLO_MODEL=/app/models/yolov8x.pt
      - YOLO_DEVICE=cuda
    volumes:
      - ./yolo-detection/models:/app/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:18060/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  face-service:
    image: ghcr.io/deepinsight/insightface:rest
    container_name: face-service
    restart: unless-stopped
    ports:
      - "18081:18080"
    environment:
      - PYTHONPATH=/insightface-rest/src
      - LOG_LEVEL=INFO
      - NUM_WORKERS=1
      - INFERENCE_BACKEND=onnx
      - FORCE_FP16=False
      - DET_NAME=retinaface_r50_v1
      - DET_THRESH=0.6
      - REC_NAME=arcface_r100_v1
      - REC_BATCH_SIZE=1
      - GA_NAME=genderage_v1
      - KEEP_ALL=True
      - MAX_SIZE=640,640
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:18080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    volumes:
      - ./face-service/models:/models

  reid:
    build: ./reid-service
    container_name: reid-service
    restart: unless-stopped
    runtime: nvidia
    ports:
      - "18090:18090"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - REID_MODEL_PATH=/models/osnet_x0_75.onnx
      - REID_INPUT_FORMAT=RGB
    volumes:
      - ./reid-service/models:/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:18090/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  fusion:
    build: ./fusion
    container_name: fusion-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - YOLO_URL=http://yolo-detection:18060
      - FACE_URL=http://face-service:18080
      - REID_URL=http://reid:18090
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - INGEST_EVENT_URL=${INGEST_EVENT_URL}
      - VISION_WEBHOOK_SECRET=${VISION_WEBHOOK_SECRET}
      - CLIP_EXPORTER_URL=http://clip-exporter:8095
      - T_FACE=0.65
      - T_REID=0.86
      - T_MOVE=4
      - N_FRAMES=20
      - MAX_PEOPLE=10
      - MAX_IMAGE_MB=2
      - REQUEST_TIMEOUT=0.150
    depends_on:
      - yolo-detection
      - face-service
      - reid
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  multi-tracker:
    build: ./multi-tracker
    container_name: multi-tracker
    restart: unless-stopped
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - FACE_URL=http://face-service:18080
      - T_FACE=0.65
      - T_REID=0.86
      - EMA_ALPHA=0.30
    ports:
      - "8087:8087"
    depends_on:
      - face-service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8087/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frame-puller:
    build: ./frame-puller
    container_name: frame-puller
    restart: unless-stopped
    ports:
      - "9100:9100"  # Prometheus metrics
    environment:
      - STREAM_URL=rtsp://mediamtx:8554/simulador
      - FUSION_URL=http://fusion:8080
      - CAMERA_ID=cam-sim
      - PULLER_FPS=8
      - MAX_IMAGE_MB=0.5
      - MIN_FPS=3
      - MAX_FPS=10
      - LATENCY_THRESHOLD=0.5
      - RECONNECT_DELAY=5
      - METRICS_PORT=9100
    depends_on:
      - mediamtx
      - fusion

  camera-sim:
    build: ./camera-sim
    container_name: camera-sim
    restart: unless-stopped
    environment:
      - INPUT_MODE=netcam
      - NETCAM_URL=${NETCAM_URL}
      - USE_RTMP=true
      - RTMP_URL=rtmp://mediamtx:1935/simulador?user=pub&pass=pub123
      - RTSP_URL=rtsp://mediamtx:8554/simulador
    depends_on:
      - mediamtx
    # No ports exposed - streams to MediaMTX

  analytics:
    build: ./analytics
    container_name: analytics-service
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      - PORT=8090
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./observability/alerts.yml:/etc/prometheus/alerts.yml:ro
      - ./observability/prom-data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - fusion
      - frame-puller
      - analytics

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_DEFAULT_THEME=light
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards
      - ./observability/grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  notifier:
    build: 
      context: ./notifier
      dockerfile: Dockerfile
    container_name: notifier
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=auto
      - STREAM_SNAPSHOT_URL=http://mediamtx:8888/simulador/index.m3u8
      - NOTIFIER_TIMEOUT_MS=3000
      - TELEGRAM_PARSE_MODE=HTML
    ports:
      - "8085:8085"
    depends_on:
      - mediamtx
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  enricher:
    build: ./enricher
    container_name: enricher
    restart: unless-stopped
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - FACE_URL=http://face-service:18080
      - T_FACE=0.65
      - K=10
      - EMA_ALPHA=0.30
      - STREAM_SNAPSHOT_URL=http://mediamtx:8888/simulador/index.m3u8
      - POLL_INTERVAL_SEC=1.0
      - SUPABASE_REALTIME=true
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    ports:
      - "8086:8086"
    depends_on:
      - face-service
      - mediamtx
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  clip-exporter:
    build: ./clip-exporter
    container_name: clip-exporter
    restart: unless-stopped
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NOTIFIER_URL=http://notifier:8085
      - HLS_URL=http://mediamtx:8888/simulador/index.m3u8
      - DURATION_SECONDS=10
      - RECORDINGS_DIR=/recordings
    ports:
      - "8095:8095"
    volumes:
      - ./recordings:/recordings:ro
    depends_on:
      - mediamtx
      - notifier
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8095/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  media-cleaner:
    build: ./media-cleaner
    container_name: media-cleaner
    restart: unless-stopped
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - MEDIA_RETENTION_DAYS=90
      - MEDIA_BUCKETS=evidence,event_clips
      - CLEANUP_INTERVAL_SECONDS=86400
    ports:
      - "8097:8097"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8097/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s