server {
    listen 0.0.0.0:${PORT};
    server_name _;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # HLS streams
    location /hls/ {
        proxy_pass http://127.0.0.1:8888/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        
        # Handle OPTIONS for CORS preflight
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # MediaMTX API
    location /api/ {
        proxy_pass http://127.0.0.1:9997/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # CORS headers
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # Handle OPTIONS for CORS preflight
        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Root returns info
    location / {
        return 200 '{"status":"ok","service":"mediamtx-proxy"}\n';
        add_header Content-Type application/json;
    }
}
